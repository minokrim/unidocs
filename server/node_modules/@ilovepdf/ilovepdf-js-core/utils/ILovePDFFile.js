"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const form_data_1 = __importDefault(require("form-data"));
const fs_1 = __importDefault(require("fs"));
const BaseFile_1 = __importDefault(require("../tasks/BaseFile"));
class ILovePDFFile extends BaseFile_1.default {
    constructor(fileAbsolutePath, params) {
        const basename = getBasename(fileAbsolutePath);
        super('', '', basename, params);
        const file = fs_1.default.readFileSync(fileAbsolutePath);
        this.file = file;
    }
    get data() {
        // Create each time due to 'task'
        // property could change previously.
        const formData = new form_data_1.default();
        formData.append('task', this.taskId);
        formData.append('file', this.file, { filename: this.filename });
        if (this.info) { // Get information if required.
            formData.append('pdfinfo', 1);
        }
        return formData;
    }
}
exports.default = ILovePDFFile;
function getBasename(path) {
    const firstIndex = path.lastIndexOf('/') + 1;
    if (firstIndex === -1)
        throw new Error('Path is malformed');
    const basename = path.substring(firstIndex);
    return basename;
}
//# sourceMappingURL=ILovePDFFile.js.map