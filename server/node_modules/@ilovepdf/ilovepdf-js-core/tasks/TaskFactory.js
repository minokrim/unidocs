"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const MergeTask_1 = __importDefault(require("./MergeTask"));
const TaskTypeNotExistsError_1 = __importDefault(require("../errors/TaskTypeNotExistsError"));
const SplitTask_1 = __importDefault(require("./SplitTask"));
const CompressTask_1 = __importDefault(require("./CompressTask"));
const WatermarkTask_1 = __importDefault(require("./WatermarkTask"));
const ValidatePdfaTask_1 = __importDefault(require("./ValidatePdfaTask"));
const ProtectTask_1 = __importDefault(require("./ProtectTask"));
const PdfJpgTask_1 = __importDefault(require("./PdfJpgTask"));
const PdfaTask_1 = __importDefault(require("./PdfaTask"));
const PageNumberTask_1 = __importDefault(require("./PageNumberTask"));
const ImagePdfTask_1 = __importDefault(require("./ImagePdfTask"));
const UnlockTask_1 = __importDefault(require("./UnlockTask"));
const RotateTask_1 = __importDefault(require("./RotateTask"));
const RepairTask_1 = __importDefault(require("./RepairTask"));
const OfficePdfTask_1 = __importDefault(require("./OfficePdfTask"));
const HtmlPdfTask_1 = __importDefault(require("./HtmlPdfTask"));
const ExtractTask_1 = __importDefault(require("./ExtractTask"));
const SignTask_1 = __importDefault(require("./sign/SignTask"));
const EditTask_1 = __importDefault(require("./edit/EditTask"));
const PdfOcrTask_1 = __importDefault(require("./PdfOcrTask"));
const tasks = {
    merge: MergeTask_1.default,
    split: SplitTask_1.default,
    compress: CompressTask_1.default,
    extract: ExtractTask_1.default,
    htmlpdf: HtmlPdfTask_1.default,
    imagepdf: ImagePdfTask_1.default,
    officepdf: OfficePdfTask_1.default,
    pagenumber: PageNumberTask_1.default,
    pdfa: PdfaTask_1.default,
    pdfjpg: PdfJpgTask_1.default,
    protect: ProtectTask_1.default,
    repair: RepairTask_1.default,
    rotate: RotateTask_1.default,
    unlock: UnlockTask_1.default,
    validatepdfa: ValidatePdfaTask_1.default,
    watermark: WatermarkTask_1.default,
    sign: SignTask_1.default,
    editpdf: EditTask_1.default,
    pdfocr: PdfOcrTask_1.default,
};
class TaskFactory {
    /**
     * Factory method to create a task with the correct params.
     * @param taskType - Task type that will use a specific ILovePDF tool.
     * @param params - Parameters to customize the process.
     */
    newTask(taskType, auth, xhr, params = {}) {
        const task = tasks[taskType];
        if (typeof task === 'undefined') {
            // Don't return and throw an error.
            throw new TaskTypeNotExistsError_1.default();
        }
        return new task(auth, xhr, params);
    }
}
exports.default = TaskFactory;
//# sourceMappingURL=TaskFactory.js.map