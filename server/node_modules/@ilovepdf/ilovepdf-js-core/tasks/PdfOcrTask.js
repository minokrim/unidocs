"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const TaskBaseProcess_1 = __importDefault(require("./TaskBaseProcess"));
class PdfOcrTask extends TaskBaseProcess_1.default {
    constructor(auth, xhr, params = {}) {
        super(auth, xhr, params);
        this.type = 'pdfocr';
    }
    process() {
        const _super = Object.create(null, {
            process: { get: () => super.process }
        });
        return __awaiter(this, arguments, void 0, function* (params = {}) {
            const paramsWithDefaultLang = Object.assign({ ocr_languages: ['eng'] }, params);
            return _super.process.call(this, paramsWithDefaultLang);
        });
    }
}
exports.default = PdfOcrTask;
//# sourceMappingURL=PdfOcrTask.js.map