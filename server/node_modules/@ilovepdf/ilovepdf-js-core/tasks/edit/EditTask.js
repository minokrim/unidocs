"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const TaskBaseProcess_1 = __importDefault(require("../TaskBaseProcess"));
const ElementNotExistError_1 = __importDefault(require("../../errors/ElementNotExistError"));
const ElementAlreadyExistsError_1 = __importDefault(require("../../errors/ElementAlreadyExistsError"));
class EditTask extends TaskBaseProcess_1.default {
    constructor(auth, xhr, params = {}) {
        super(auth, xhr, params);
        this.type = 'editpdf';
        this.elements = [];
    }
    /**
     * @inheritdoc
     * @override
     * @param params - ProcessParams object with extra attrs for this service.
     */
    process(params) {
        // Get elements information.
        const elements = this.elements.map((item) => (item.params));
        const paramsWithElements = Object.assign(Object.assign({}, params), { elements });
        return super.process(paramsWithElements);
    }
    // Use specific types explicitly in order to cast properties properly.
    addElement(element) {
        const index = this.elements.indexOf(element);
        if (index !== -1) {
            throw new ElementAlreadyExistsError_1.default();
        }
        this.elements.push(element);
        return this;
    }
    deleteElement(element) {
        const index = this.elements.indexOf(element);
        if (index === -1) {
            throw new ElementNotExistError_1.default();
        }
        this.elements.splice(index, 1);
        return this;
    }
}
exports.default = EditTask;
//# sourceMappingURL=EditTask.js.map