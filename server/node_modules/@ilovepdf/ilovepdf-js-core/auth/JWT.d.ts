import Auth from "./Auth";
import XHRInterface from "../utils/XHRInterface";
type JWTParams = {
    file_encryption_key?: string;
};
export default class JWT implements Auth {
    private static TIME_DELAY;
    private xhr;
    private token?;
    readonly publicKey: string;
    readonly secretKey: string;
    readonly file_encryption_key: string | undefined;
    constructor(xhr: XHRInterface, publicKey: string, secretKey?: string, params?: JWTParams);
    private validateFileEncryptionKey;
    getToken(): Promise<string>;
    /**
     * Verifies if this.token is well signed and not expired. In case of been
     * wrong-signed or expired, token is set to undefined to reset it.
     */
    private verifyToken;
    private getTokenFromServer;
    private getTokenLocally;
}
export {};
