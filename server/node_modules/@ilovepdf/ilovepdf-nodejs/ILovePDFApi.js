"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var TaskFactory_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/tasks/TaskFactory"));
var JWT_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/auth/JWT"));
var XHRPromise_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/utils/XHRPromise"));
var globals_json_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/constants/globals.json"));
var TaskTypeNotExistsError_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/errors/TaskTypeNotExistsError"));
var ILovePDFCoreApi_1 = __importDefault(require("@ilovepdf/ilovepdf-js-core/ILovePDFCoreApi"));
var ILovePDFApi = /** @class */ (function () {
    function ILovePDFApi(publicKey, secretKey, params) {
        if (params === void 0) { params = {}; }
        this.xhr = new XHRPromise_1.default;
        // Secret key is set for
        this.auth = new JWT_1.default(this.xhr, publicKey, secretKey, params);
        this.taskFactory = new TaskFactory_1.default();
    }
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.newTask = function (taskType) {
        return this.taskFactory.newTask(taskType, this.auth, this.xhr);
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.listTasks = function (params) {
        if (params === void 0) { params = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var token, data;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.auth.getToken()];
                    case 1:
                        token = _a.sent();
                        data = __assign({ secret_key: this.auth.secretKey }, params);
                        return [2 /*return*/, this.xhr.post("".concat(globals_json_1.default.API_URL_PROTOCOL, "://").concat(globals_json_1.default.API_URL, "/").concat(globals_json_1.default.API_VERSION, "/task"), JSON.stringify(data), {
                                headers: [
                                    ['Authorization', "Bearer ".concat(token)],
                                    ['Content-Type', 'application/json']
                                ],
                                transformResponse: function (res) { return JSON.parse(res); }
                            })
                                .then(function (response) {
                                var fileArray = [];
                                for (var _i = 0, response_1 = response; _i < response_1.length; _i++) {
                                    var taskJSON = response_1[_i];
                                    try {
                                        var task = _this.taskFactory.newTask(taskJSON.tool, _this.auth, _this.xhr, {
                                            id: taskJSON.task,
                                            server: taskJSON.server
                                        });
                                        fileArray.push(task);
                                    }
                                    catch (error) {
                                        // In case of not exist the tool, don't include and continue.
                                        if (!(error instanceof TaskTypeNotExistsError_1.default))
                                            throw error;
                                    }
                                }
                                return fileArray;
                            })];
                }
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.getSignatureStatus = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.getSignatureStatus(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.getSignatureList = function (page, pageLimit, filters) {
        if (page === void 0) { page = 0; }
        if (pageLimit === void 0) { pageLimit = 20; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.getSignatureList(this.auth, this.xhr, page, pageLimit, filters)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.voidSignature = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.voidSignature(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.increaseSignatureExpirationDays = function (signatureToken, daysAmount) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.increaseSignatureExpirationDays(this.auth, this.xhr, signatureToken, daysAmount)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.sendReminders = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.sendReminders(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.downloadOriginalFiles = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.downloadOriginalFiles(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.downloadSignedFiles = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.downloadSignedFiles(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.downloadAuditFiles = function (signatureToken) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.downloadAuditFiles(this.auth, this.xhr, signatureToken)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.getReceiverInfo = function (receiverTokenRequester) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.getReceiverInfo(this.auth, this.xhr, receiverTokenRequester)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.fixReceiverEmail = function (receiverTokenRequester, email) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.fixReceiverEmail(this.auth, this.xhr, receiverTokenRequester, email)];
            });
        });
    };
    /**
     * @inheritdoc
     */
    ILovePDFApi.prototype.fixReceiverPhone = function (receiverTokenRequester, phone) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, ILovePDFCoreApi_1.default.fixReceiverPhone(this.auth, this.xhr, receiverTokenRequester, phone)];
            });
        });
    };
    return ILovePDFApi;
}());
exports.default = ILovePDFApi;
module.exports = ILovePDFApi;
//# sourceMappingURL=ILovePDFApi.js.map